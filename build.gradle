apply plugin: 'java'
apply plugin: "findbugs"
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'com.github.johnrengelman.shadow'


group = 'com.github.cosmo0920'
archivesBaseName = 'fluency-sample'
version = '1.0.0-M1'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'ch.qos.logback:logback-classic:1.1.8'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    compile 'org.slf4j:slf4j-api:1.7.22'
    compile 'org.msgpack:jackson-dataformat-msgpack:0.8.12'
    compile 'org.komamitsu:phi-accural-failure-detector:0.0.4'
    compile 'org.komamitsu:fluency:1.4.0'
}

findbugs {
    effort = 'max'
}

shadowJar {
    relocate 'com.fasterxml.jackson', 'org.komamitsu.thirdparty.jackson'
    classifier = 'shadow'
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar, shadowJar
}

signing {
    sign configurations.archives
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'sample.FluencyTest'
    }
}